{"pageProps":{"post":{"title":"モンティ・ホール問題","slug":"d8d9d28b","content":"<h2>問題</h2>\n<blockquote>\n<p>あなたはゲームショーに出ている挑戦者です。ここに 3 つのドアがあり、1 つのドアの後ろには景品の新車が、他の 2 つのドアの後ろには、はずれのヤギがいます。あなたはこの中の 1 つのドアを選べるとします。あなたが 1 つのドアを選択した後、司会者が残りのドアのうち、ヤギがいるドアを 1 つ開けます。あなたは最初に選んだドアではなく、残っている開けられていないドアに変更しても構わないと司会者に話しかけられました。さて、あなたはどちらのドアを選択しますか？</p>\n</blockquote>\n<h2>解説/アルゴリズム</h2>\n<p>結論からいうと、この問題はドアを変更すると、しない場合と比べて 2 倍の確率で当たりを引くので、ドアを変更するのが正解です。</p>\n<p>しかし、確率は五分五分なのでどっちを選んでも同じだろ、いやいや、ドアを変更しても確率は 1/3 のままだ、のような間違えた回答をする人や、回答の確率を求める手順を聞いても納得をしない人が続出した有名な問題です。</p>\n<h2>解答の流れ</h2>\n<p>挑戦者が扉を選択した際、順不同ですが、ドアは { 当たり / ハズレ / ハズレ } となっているので、</p>\n<ul>\n<li>選んだドアが当たりである確率 ...... 1/3</li>\n<li>選ばなかった 2 つのドアのどちらかに当たりがある確率 ...... 2/3</li>\n</ul>\n<p>この後、挑戦者が選ばなかった 2 つのドアのうち、ハズレのドアを司会者が開きます。<br>\n選ばなかった 2 つのドアが 1 つになるのですが、ドアが減っても当たりの確率自体は変わっていません。</p>\n<p>つまり、</p>\n<ul>\n<li>選んだドアが当たりである確率 ...... 1/3</li>\n<li>選ばなかった 1 つのドアに当たりがある確率 ...... 2/3</li>\n</ul>\n<p>となり、確率 1/3 のドアと確率 2/3 のドアどちらを選びますか、と問われていることになります。</p>\n<p>ですので、</p>\n<ul>\n<li>ドアを変更しなかった場合で当たりを引く確率 ...... 1/3</li>\n<li>ドアを変更した場合で当たりを引く確率 ...... 2/3</li>\n</ul>\n<p>結果は上記のとおりとなります。</p>\n<h2>ソースコード</h2>\n<p><a href=\"./static/code/d8d9d28b/montyhall.ts\">montyhall.ts</a> / <a href=\"./static/code/d8d9d28b/app.ts\">app.ts</a></p>\n<h2>コード例</h2>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> mh <span class=\"token keyword\">from</span> <span class=\"token string\">\"./montyhall\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span>changeTheDoor<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">,</span> max<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> win <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> total <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> max<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mh<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> changeTheDoor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      win<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    total<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> winRate <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>win <span class=\"token operator\">/</span> total<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> text <span class=\"token operator\">=</span> <span class=\"token string\">\"扉を変えない場合\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>changeTheDoor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    text <span class=\"token operator\">=</span> <span class=\"token string\">\"扉を変える場合\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>win<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> / </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>total<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> 勝率 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>winRate<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">%</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> iterations <span class=\"token operator\">=</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> iterations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> iterations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<pre class=\"language-text\"><code class=\"language-text\">扉を変える場合\n6629 / 10000 勝率 66.29%\n\n扉を変えない場合\n3322 / 10000 勝率 33.22%\n</code></pre>\n<h2>内部で利用しているアルゴリズム</h2>\n<p><a href=\"/e14deb99\">擬似乱数</a>, <a href=\"/0fd2eac9\">床関数</a></p>\n"}},"__N_SSG":true}