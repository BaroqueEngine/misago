{"pageProps":{"post":{"title":"ピクセルソート","slug":"cb4da1c7","content":"<h2>実行例</h2>\n<h3>元画像</h3>\n<p><img src=\"./static/images/cb4da1c7/0.jpg\" alt=\"\"></p>\n<h3>N = 300</h3>\n<p><img src=\"./static/images/cb4da1c7/1.png\" alt=\"\"></p>\n<h3>N = 900</h3>\n<p><img src=\"./static/images/cb4da1c7/2.png\" alt=\"\"></p>\n<h2>ソースコード</h2>\n<h3>TypeScript</h3>\n<p><a href=\"./static/code/cb4da1c7/0.jpg\">0.jpg</a> / <a href=\"./static/code/cb4da1c7/app.ts\">app.ts</a></p>\n<h2>解説/アルゴリズム</h2>\n<ol>\n<li>画像のピクセルを左から右に、上から下に走査を行い、2. ～ 6. の処理を繰り返して実行します。</li>\n<li>今走査している対象のピクセルを A と呼びます。</li>\n<li>まだ走査していないピクセルの中から、N 個のピクセルをランダムに抽出します。これを B グループと呼びます。</li>\n<li>A に隣接しているピクセルをいくつか取り出し、これを C グループと呼びます。</li>\n<li>B グループのピクセルの中から、C グループの各ピクセルと最も色が近いピクセルを選びます。これを D と呼びます。</li>\n<li>A と D のピクセルの色を入れ替えます。</li>\n</ol>\n<h3>補足</h3>\n<ul>\n<li>4.の、A に隣接しているピクセルは斜めも入れると 8 個ありますが、上記の実行例では上 / 左上 / 左 / 左下のピクセルを対象にしているので結果が<a href=\"/8e0a4461\">モーションブラー</a>に近い形になりました。</li>\n<li>5.の、最も色が近いピクセルを計算するには、B グループから取り出したピクセルと C グループの各ピクセルとの<a href=\"/9cb15253\">色の距離</a>を計算し、平均を求めます。上記例では、距離の計算に<a href=\"/3385ebb2\">マンハッタン距離</a>を利用しています。</li>\n<li>D の位置にあるピクセルは入れ替えても走査済みにはなりません。</li>\n</ul>\n"}},"__N_SSG":true}