{"pageProps":{"post":{"title":"単位ベクトル","slug":"96e54783","content":"<h2>解説/アルゴリズム</h2>\n<p><img src=\"./static/images/96e54783/0.png\" alt=\"\"></p>\n<p><a href=\"/d074e5c8\">ベクトルの大きさ</a>が 1 になるように、各成分を現在のベクトルの大きさで割る。</p>\n<p>このようにベクトルの大きさを 1 にする作業を<a href=\"/2c7dcb93\">正規化</a>と呼び、この大きさ 1 のベクトルを単位ベクトルと呼ぶ。</p>\n<p>円で考えると半径が 1 になるので、 x や y のような各成分の値は必ず -1 ～ 1 の範囲に収まる。</p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> a<span class=\"token operator\">:</span> Vector <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> z<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 向き45度、大きさ8.4852...のベクトル</span>\n<span class=\"token keyword\">const</span> b<span class=\"token operator\">:</span> Vector <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> z<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 向き90度、大きさ3のベクトル</span>\n\n<span class=\"token function\">unit</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 正規化することで、向き45度、大きさ1のベクトルになる。</span>\n<span class=\"token function\">unit</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 正規化することで、向き90度、大きさ1のベクトルになる。</span>\n</code></pre>\n<p>ベクトルは大きさと向きを持つ量だが、正規化することで大きさが 1 になり、向きだけを持つベクトルと考えることができる。</p>\n<pre class=\"language-text\"><code class=\"language-text\">x /= length;\ny /= length;\n\nx *= size;\ny *= size;\n</code></pre>\n<p>1 ではなく特定の大きさに設定したい場合は、一度正規化した後、設定したい大きさを成分に掛け合わせる。</p>\n<h2>コード例</h2>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// 引数の大きさで正規化する</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>vec<span class=\"token operator\">:</span> Vector<span class=\"token punctuation\">,</span> len<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Vector <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> ratio <span class=\"token operator\">=</span> len <span class=\"token operator\">/</span> <span class=\"token function\">length</span><span class=\"token punctuation\">(</span>vec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> vec<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> ratio<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> vec<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> ratio<span class=\"token punctuation\">,</span> z<span class=\"token operator\">:</span> vec<span class=\"token punctuation\">.</span>z <span class=\"token operator\">*</span> ratio <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// エイリアス</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">unit</span><span class=\"token punctuation\">(</span>vec<span class=\"token operator\">:</span> Vector<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Vector <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>vec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> length<span class=\"token punctuation\">,</span> normalize<span class=\"token punctuation\">,</span> unit<span class=\"token punctuation\">,</span> Vector <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./vector\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> a<span class=\"token operator\">:</span> Vector <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> z<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 8.48528137423857</span>\n\n<span class=\"token keyword\">const</span> b<span class=\"token operator\">:</span> Vector <span class=\"token operator\">=</span> <span class=\"token function\">unit</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n\n<span class=\"token keyword\">const</span> c<span class=\"token operator\">:</span> Vector <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\n</code></pre>\n<h2>ソースコード</h2>\n<p><a href=\"./static/code/96e54783/vector.ts\">vector.ts</a> / <a href=\"./static/code/96e54783/app.ts\">app.ts</a></p>\n"}},"__N_SSG":true}