{"pageProps":{"post":{"title":"Xorshift","slug":"5e2cb706","content":"<h2>解説/アルゴリズム</h2>\n<p>乱数で取得する値の並びがまったく同じになるように調整できると便利なときがあります。<br>\nたとえば、デバッグ時やなにかのリプレイを行うようなときです。</p>\n<p>そのような乱数列を生み出すために、乱数を利用する前に前もって渡しておく値のことをシードと呼びます。<br>\nシード毎に固定の乱数列が生成されます。</p>\n<p>Math.random()ではシードが指定できませんので、Xorshift(32bit)という生成アルゴリズムでシードが指定できるように設計しています。</p>\n<p>Xorshift(32bit)は 1 以上 4294967295 以下の整数値全てを重複なくバラバラに出力するアルゴリズムです。</p>\n<table>\n<thead>\n<tr>\n<th>順番</th>\n<th>生成される値</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>仮にこの位置を 1 番目だとする</td>\n<td>3337163801</td>\n</tr>\n<tr>\n<td>2 番目</td>\n<td>1763869612</td>\n</tr>\n<tr>\n<td>3 番目</td>\n<td>330629095</td>\n</tr>\n<tr>\n<td>...</td>\n<td></td>\n</tr>\n<tr>\n<td>4294967293 番目</td>\n<td>447601850</td>\n</tr>\n<tr>\n<td>4294967294 番目</td>\n<td>2254653639</td>\n</tr>\n<tr>\n<td>4294967295 番目</td>\n<td>12346</td>\n</tr>\n<tr>\n<td>4294967296 番目(1 番目)</td>\n<td>3337163801</td>\n</tr>\n<tr>\n<td>4294967297 番目(2 番目)</td>\n<td>1763869612</td>\n</tr>\n<tr>\n<td>4294967298 番目(3 番目)</td>\n<td>330629095</td>\n</tr>\n</tbody>\n</table>\n<p>バラバラといっても内部の計算式に乱数が使われているわけではないので、ローテーション自体は固定のものになります。<br>\nたとえば、3337163801 の後に生成される値は必ず 1763869612 になります。</p>\n<p>内部では前回生成した値を保持していますが、それを外部から初期値として指定できるようにすると、それはシード値になります。</p>\n<p>下記で掲載しているコードでは Math.random と同じように 0 以上 1 未満の値が返却されるように<a href=\"/2c7dcb93\">正規化</a>しています。</p>\n<h2>コード例</h2>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// 2^32 - 1</span>\n<span class=\"token keyword\">const</span> max <span class=\"token operator\">=</span> <span class=\"token number\">0xffffffff</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\">XorShift</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  seed<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span>seed<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> xs<span class=\"token operator\">:</span> XorShift <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> seed<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 引数がなければシード値をランダムに選ぶ</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>seed <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    xs<span class=\"token punctuation\">.</span>seed <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> max<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setSeed</span><span class=\"token punctuation\">(</span>xs<span class=\"token punctuation\">,</span> seed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// この時点で初期値(seed)が1以上MAX以下の値になるように調整されている</span>\n\n  <span class=\"token keyword\">return</span> xs<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// シード値の指定(0 <= seed < MAX)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">setSeed</span><span class=\"token punctuation\">(</span>xs<span class=\"token operator\">:</span> XorShift<span class=\"token punctuation\">,</span> seed<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 整数にする</span>\n  seed <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\"><=</span> seed <span class=\"token operator\">&&</span> seed <span class=\"token operator\"><</span> max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">シード値の範囲は0以上</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>max<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">未満の値でなければいけません。</span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  xs<span class=\"token punctuation\">.</span>seed <span class=\"token operator\">=</span> seed <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 0以上1未満の値を返す</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span>xs<span class=\"token operator\">:</span> XorShift<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>xs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 上限値が1未満になる、の実装のため、seed/MAX=1になるような計算はスキップする</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xs<span class=\"token punctuation\">.</span>seed <span class=\"token operator\">===</span> max<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>xs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 下限値が0になるように分子分母ともに1を引いて割合を求める</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>xs<span class=\"token punctuation\">.</span>seed <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>max <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 次に生成される値を計算</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>xs<span class=\"token operator\">:</span> XorShift<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  xs<span class=\"token punctuation\">.</span>seed <span class=\"token operator\">=</span> xs<span class=\"token punctuation\">.</span>seed <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>xs<span class=\"token punctuation\">.</span>seed <span class=\"token operator\"><<</span> <span class=\"token number\">13</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  xs<span class=\"token punctuation\">.</span>seed <span class=\"token operator\">=</span> xs<span class=\"token punctuation\">.</span>seed <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>xs<span class=\"token punctuation\">.</span>seed <span class=\"token operator\">>>></span> <span class=\"token number\">17</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  xs<span class=\"token punctuation\">.</span>seed <span class=\"token operator\">=</span> xs<span class=\"token punctuation\">.</span>seed <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>xs<span class=\"token punctuation\">.</span>seed <span class=\"token operator\"><<</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  xs<span class=\"token punctuation\">.</span>seed <span class=\"token operator\">=</span> xs<span class=\"token punctuation\">.</span>seed <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 33bit番目以上の情報は捨てる</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> init<span class=\"token punctuation\">,</span> getValue <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./xorshift\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token number\">12345</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0.7769939958942095</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0.4106828970418698</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0.07698058480256265</span>\n\n<span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token number\">12345</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0.7769939958942095</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0.4106828970418698</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0.07698058480256265</span>\n</code></pre>\n<p>Xorshift(32bit)をベースとしたシード値が指定できる疑似乱数生成クラスです。<br>\nコンストラクタにはシード値を指定します。シード値の範囲は 0 以上 4294967295(0xFFFFFFFF)未満です。<br>\n<code>getValue</code>は 0 以上 1 未満の値を返却します。</p>\n<h2>ソースコード</h2>\n<p><a href=\"./static/code/5e2cb706/xorshift.ts\">xorshift.ts</a> / <a href=\"./static/code/5e2cb706/app.ts\">app.ts</a></p>\n<h2>内部で利用しているアルゴリズム</h2>\n<p><a href=\"/e14deb99\">擬似乱数</a>, <a href=\"/0fd2eac9\">床関数</a>, <a href=\"/2c7dcb93\">正規化</a></p>\n"}},"__N_SSG":true}