{"pageProps":{"post":{"title":"オートタイル","slug":"6e9dd15b","content":"<h2>実行例</h2>\n<p><img src=\"./static/images/6e9dd15b/0.png\" alt=\"\">\n<a href=\"./static/play/6e9dd15b/index.html\">実行結果を見る</a></p>\n<h2>ソースコード</h2>\n<h3>TypeScript</h3>\n<p><a href=\"./static/code/6e9dd15b/tile.png\">tile.png</a> / <a href=\"./static/code/6e9dd15b/app.ts\">app.ts</a></p>\n<h2>解説/アルゴリズム</h2>\n<p><img src=\"./static/images/6e9dd15b/1.png\" alt=\"\">\nマップデータが入った二次元配列を用意して、その配列の値をもとに一つのタイルマップ画像を使用してタイルを配置すると上記のようになります。<br>\n（0 = 非表示, 1 = 表示）</p>\n<p><img src=\"./static/images/6e9dd15b/2.png\" alt=\"\">\nここでオートタイルというアルゴリズムを使用すると並べ方に応じてタイル間の繋がりを自然に見せることができます。</p>\n<p>具体的なアルゴリズムを見てみましょう。</p>\n<p><img src=\"./static/images/6e9dd15b/3.png\" alt=\"\">\nタイルの周りにある 4 方向、つまり上下左右に<code>1, 2, 4, 8</code>の番号を振っておきます。<br>\nこれはどのように振ってもらっても構いません。</p>\n<p>解説では下記のように方向を振ります。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方向</th>\n<th style=\"text-align:left\">値</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">上</td>\n<td style=\"text-align:left\">1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">右</td>\n<td style=\"text-align:left\">2</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">下</td>\n<td style=\"text-align:left\">4</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">左</td>\n<td style=\"text-align:left\">8</td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"./static/images/6e9dd15b/4.png\" alt=\"\">\n二次元配列の全ての要素を走査します。<br>\nその際、自分の周りにある 4 方向の要素に 1 が入ってたら、先程決めた方向の値に変換して足し合わせます。\n下記が値の例となります。</p>\n<ul>\n<li>上にタイルがある場合 = 1</li>\n<li>右にタイルがある場合 = 2</li>\n<li>上と右にタイルがある場合 = 1 + 2 = 3</li>\n</ul>\n<p>すべてのパターンは下記のとおりとなります。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方向</th>\n<th style=\"text-align:left\">値</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">無し</td>\n<td style=\"text-align:left\">0</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">上</td>\n<td style=\"text-align:left\">1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">右</td>\n<td style=\"text-align:left\">2</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">上 + 右</td>\n<td style=\"text-align:left\">3</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">下</td>\n<td style=\"text-align:left\">4</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">上 + 下</td>\n<td style=\"text-align:left\">5</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">右 + 下</td>\n<td style=\"text-align:left\">6</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">上 + 右 + 下</td>\n<td style=\"text-align:left\">7</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">左</td>\n<td style=\"text-align:left\">8</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">上 + 左</td>\n<td style=\"text-align:left\">9</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">右 + 左</td>\n<td style=\"text-align:left\">10</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">上 + 右 + 左</td>\n<td style=\"text-align:left\">11</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">下 + 左</td>\n<td style=\"text-align:left\">12</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">上 + 下 + 左</td>\n<td style=\"text-align:left\">13</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">右 + 下 + 左</td>\n<td style=\"text-align:left\">14</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">上 + 右 + 下 + 左</td>\n<td style=\"text-align:left\">15</td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"./static/images/6e9dd15b/5.png\" alt=\"\">\n上記の 16 パターンに対応したタイル画像を用意します。<br>\n左から順番に値 0 の画像、値 1 の画像、値 2 の画像…と並べていきます。</p>\n<p>値に対応している方向に応じて画像を作る必要があります。<br>\n例えば左側 2 番目、つまり値 1 に対応した画像ですが、これは上方向だけ繋がっているパターンですので、上方向だけ開けた画像にしなければなりません。</p>\n<h3>コード解説</h3>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">updateTile</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 上下左右に壁があるかどうかを確認して方向の値を足してゆく</span>\n  <span class=\"token keyword\">let</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> y <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">getCell</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> CellType<span class=\"token punctuation\">.</span>wall<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    index <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> cellWidth <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">getCell</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> CellType<span class=\"token punctuation\">.</span>wall<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    index <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> cellHeight <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">getCell</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> CellType<span class=\"token punctuation\">.</span>wall<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    index <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> x <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">getCell</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> CellType<span class=\"token punctuation\">.</span>wall<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    index <span class=\"token operator\">+=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// タイル画像から上記で計算した値に対応する画像を切り出して表示する</span>\n  p<span class=\"token punctuation\">.</span><span class=\"token function\">copy</span><span class=\"token punctuation\">(</span>\n    chip<span class=\"token punctuation\">,</span>\n    index <span class=\"token operator\">*</span> chipWidth<span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    chipWidth<span class=\"token punctuation\">,</span>\n    chipHeight<span class=\"token punctuation\">,</span>\n    x <span class=\"token operator\">*</span> tileWidth<span class=\"token punctuation\">,</span>\n    y <span class=\"token operator\">*</span> tileHeight<span class=\"token punctuation\">,</span>\n    tileWidth<span class=\"token punctuation\">,</span>\n    tileHeight\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n"}},"__N_SSG":true}