{"pageProps":{"post":{"title":"壁のばし法","slug":"75edb5a1","content":"<h2>実行例</h2>\n<p><img src=\"./static/images/75edb5a1/0.png\" alt=\"\">\n<a href=\"./static/play/75edb5a1/index.html\">実行結果を見る</a></p>\n<h2>ソースコード</h2>\n<h3>TypeScript</h3>\n<p><a href=\"./static/code/75edb5a1/app.ts\">app.ts</a></p>\n<h2>解説/アルゴリズム</h2>\n<p><img src=\"./static/images/75edb5a1/1.png\" alt=\"\"></p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\">map <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\"><</span> tileHeight<span class=\"token punctuation\">;</span> y<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  map<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\"><</span> tileWidth<span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> x <span class=\"token operator\">===</span> tileWidth <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">||</span> y <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> y <span class=\"token operator\">===</span> tileHeight <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      map<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> CellType<span class=\"token punctuation\">.</span>Wall<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      map<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> CellType<span class=\"token punctuation\">.</span>Floor<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>サイズが奇数 × 奇数の二次元配列を用意します。<br>\n配列の外側をすべて壁で埋めます。</p>\n<p><img src=\"./static/images/75edb5a1/2.png\" alt=\"\"></p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\">positions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\"><</span> tileHeight<span class=\"token punctuation\">;</span> y <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  positions<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> y <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  positions<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> tileWidth <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\"><</span> tileWidth<span class=\"token punctuation\">;</span> x <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  positions<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  positions<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> tileHeight <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">shuffle</span><span class=\"token punctuation\">(</span>positions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>縦横奇数番目の壁の位置をすべて取得し配列に格納します。<br>\n配列の要素をランダムに並び替えておきます。</p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\"><</span> positions<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> next <span class=\"token operator\">=</span> positions<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">createWall</span><span class=\"token punctuation\">(</span>next<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> next<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">createWall</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> dirs <span class=\"token operator\">=</span> directions<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">shuffle</span><span class=\"token punctuation\">(</span>dirs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> dir <span class=\"token keyword\">of</span> dirs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> tx <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> dir<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> ty <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> dir<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> tx2 <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> dir<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> ty2 <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> dir<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token number\">0</span> <span class=\"token operator\"><=</span> tx2 <span class=\"token operator\">&&</span>\n      tx2 <span class=\"token operator\"><</span> tileWidth <span class=\"token operator\">&&</span>\n      <span class=\"token number\">0</span> <span class=\"token operator\"><=</span> ty2 <span class=\"token operator\">&&</span>\n      ty2 <span class=\"token operator\"><</span> tileHeight <span class=\"token operator\">&&</span>\n      map<span class=\"token punctuation\">[</span>ty<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>tx<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> CellType<span class=\"token punctuation\">.</span>Floor <span class=\"token operator\">&&</span>\n      map<span class=\"token punctuation\">[</span>ty2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>tx2<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> CellType<span class=\"token punctuation\">.</span>Floor\n    <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      map<span class=\"token punctuation\">[</span>ty<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>tx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> CellType<span class=\"token punctuation\">.</span>Wall<span class=\"token punctuation\">;</span>\n      map<span class=\"token punctuation\">[</span>ty2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>tx2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> CellType<span class=\"token punctuation\">.</span>Wall<span class=\"token punctuation\">;</span>\n\n      positions<span class=\"token punctuation\">.</span><span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> tx2<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> ty2 <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      positions<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">,</span> y <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>下記処理を配列の中身が空になるまで繰り返します。</p>\n<ol>\n<li>配列配列の先頭から要素（位置）を一つ取り出す。</li>\n<li>取り出した位置から上下左右それぞれを見て、それらの方向の 1 マス先と 2 マス先が壁なら掘り進める。</li>\n<li>掘り進めた 2 つ先の位置を配列の<code>先頭</code>に登録。</li>\n<li>取り出した位置を配列の<code>末尾</code>に登録。</li>\n<li>上下左右をチェックするループを強制的に抜ける。</li>\n</ol>\n<p>例えば上下左右のうち、上に掘り進めそうなら、そのまま上の 2 マス先まで掘り進め、2 マス先の位置を配列の先頭に登録します。先頭に登録するのはこのすぐあとにそこからまたスタートしたいからです。<br>\n上に掘り進んだ場合、まだ確認していない方向を見ずに上下左右ループを抜けます。取り出した位置を末尾に登録しているので、後に他の方向をチェックできるからです。</p>\n<p>この処理はいわゆる<a href=\"/0b021f8a\">深さ優先探索</a>となります。</p>\n<p><img src=\"./static/images/75edb5a1/3.png\" alt=\"\">\n上記探索が終了すると迷路が完成します。</p>\n"}},"__N_SSG":true}