{"pageProps":{"post":{"title":"モザイク","slug":"84e0607b","content":"<h2>実行例</h2>\n<p><img src=\"./static/images/84e0607b/0.jpg\" alt=\"\">\n<img src=\"./static/images/84e0607b/1.png\" alt=\"\"></p>\n<h2>ソースコード</h2>\n<h3>TypeScript</h3>\n<p><a href=\"./static/code/84e0607b/0.jpg\">0.jpg</a> / <a href=\"./static/code/84e0607b/app.ts\">app.ts</a></p>\n<h2>解説/アルゴリズム</h2>\n<p><img src=\"./static/images/84e0607b/2.png\" alt=\"\">\n3*3 のような一定範囲のピクセルを対象に、RGB ごとに平均化した値を設定し直します。<br>\n上記だと、(171 + 21 + 66 + 84 + 180 + 3 + 205 + 78 + 168) / 9 ≒ 108 を 3x3 のピクセルに再代入します。</p>\n<p><img src=\"./static/images/84e0607b/3.png\" alt=\"\">\n範囲計算の際にインデックスがはみ出る場合はその部分の計算は行いません。<br>\n上記だと、(200 + 47 + 55 + 251 + 53 + 172) / 6 ≒ 129 を 2x3 のピクセルに再代入します。</p>\n<h2>コード例(GLSL)</h2>\n<pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token keyword\">attribute</span> <span class=\"token keyword\">vec2</span> aPosition<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">uniform</span> <span class=\"token keyword\">vec2</span> uResolution<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">varying</span> <span class=\"token keyword\">vec2</span> vPosition<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">vec2</span> clipSpace <span class=\"token operator\">=</span> aPosition <span class=\"token operator\">/</span> uResolution <span class=\"token operator\">*</span> <span class=\"token number\">2.0</span> <span class=\"token operator\">-</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n  gl_Position <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>clipSpace <span class=\"token operator\">*</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  vPosition <span class=\"token operator\">=</span> aPosition<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token keyword\">precision</span> <span class=\"token keyword\">mediump</span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> range <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">uniform</span> <span class=\"token keyword\">sampler2D</span> uImage<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">uniform</span> <span class=\"token keyword\">vec2</span> uTextureSize<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">varying</span> <span class=\"token keyword\">vec2</span> vPosition<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">vec2</span> cur <span class=\"token operator\">=</span> <span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>vPosition <span class=\"token operator\">/</span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span>range<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span>range<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">vec4</span> color <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\"><</span> range<span class=\"token punctuation\">;</span> y<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\"><</span> range<span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">vec2</span> pos <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>cur <span class=\"token operator\">+</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> uTextureSize<span class=\"token punctuation\">;</span>\n      color <span class=\"token operator\">+=</span> <span class=\"token function\">texture2D</span><span class=\"token punctuation\">(</span>uImage<span class=\"token punctuation\">,</span> pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  gl_FragColor <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">.</span>rgb <span class=\"token operator\">/</span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span>range <span class=\"token operator\">*</span> range<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2>コード例(p5.js)</h2>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> p5 <span class=\"token keyword\">from</span> <span class=\"token string\">\"p5\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">p5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">:</span> p5<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> image<span class=\"token operator\">:</span> p5<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// range * rangeおきに平均化する</span>\n  <span class=\"token keyword\">const</span> range <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n  p<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">preload</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    image <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">loadImage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./0.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  p<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setup</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    p<span class=\"token punctuation\">.</span><span class=\"token function\">createCanvas</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>windowWidth<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>windowHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    image<span class=\"token punctuation\">.</span><span class=\"token function\">loadPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 画像のピクセルを縦横rangeおきに走査</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\"><</span> image<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span> y <span class=\"token operator\">+=</span> range<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\"><</span> image<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span> x <span class=\"token operator\">+=</span> range<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// RGBそれぞれの合計</span>\n        <span class=\"token keyword\">let</span> tr <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> tg <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> tb <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 対象となるピクセル数</span>\n        <span class=\"token keyword\">let</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// range * rangeの範囲を走査</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> yy <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> yy <span class=\"token operator\"><</span> range<span class=\"token punctuation\">;</span> yy<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> xx <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> xx <span class=\"token operator\"><</span> range<span class=\"token punctuation\">;</span> xx<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> ty <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> yy<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">const</span> tx <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> xx<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ty <span class=\"token operator\"><</span> image<span class=\"token punctuation\">.</span>height <span class=\"token operator\">&&</span> tx <span class=\"token operator\"><</span> image<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">const</span> color <span class=\"token operator\">=</span> <span class=\"token function\">getPixel</span><span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">,</span> ty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token keyword\">const</span> r <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">red</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token keyword\">const</span> g <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">green</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">blue</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              tr <span class=\"token operator\">+=</span> r<span class=\"token punctuation\">;</span>\n              tg <span class=\"token operator\">+=</span> g<span class=\"token punctuation\">;</span>\n              tb <span class=\"token operator\">+=</span> b<span class=\"token punctuation\">;</span>\n              count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// RGBごとに平均を取る</span>\n        tr <span class=\"token operator\">/=</span> count<span class=\"token punctuation\">;</span>\n        tg <span class=\"token operator\">/=</span> count<span class=\"token punctuation\">;</span>\n        tb <span class=\"token operator\">/=</span> count<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 平均の色でrange * rangeのピクセルを塗りつぶす</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> yy <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> yy <span class=\"token operator\"><</span> range<span class=\"token punctuation\">;</span> yy<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> xx <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> xx <span class=\"token operator\"><</span> range<span class=\"token punctuation\">;</span> xx<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> ty <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> yy<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">const</span> tx <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> xx<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ty <span class=\"token operator\"><</span> image<span class=\"token punctuation\">.</span>height <span class=\"token operator\">&&</span> tx <span class=\"token operator\"><</span> image<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token function\">setPixel</span><span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">,</span> ty<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>tr<span class=\"token punctuation\">,</span> tg<span class=\"token punctuation\">,</span> tb<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    image<span class=\"token punctuation\">.</span><span class=\"token function\">updatePixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    p<span class=\"token punctuation\">.</span><span class=\"token function\">image</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">getPixel</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">*</span> image<span class=\"token punctuation\">.</span>width <span class=\"token operator\">+</span> x<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n      image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">setPixel</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">*</span> image<span class=\"token punctuation\">.</span>width <span class=\"token operator\">+</span> x<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n    image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n"}},"__N_SSG":true}