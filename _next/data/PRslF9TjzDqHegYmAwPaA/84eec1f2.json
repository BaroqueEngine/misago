{"pageProps":{"post":{"title":"スプライトシートの再生","slug":"84eec1f2","content":"<h2>実行例</h2>\n<p><img src=\"./static/images/84eec1f2/0.png\" alt=\"\">\n<a href=\"./static/play/84eec1f2/index.html\">実行結果を見る</a></p>\n<h2>ソースコード</h2>\n<h3>TypeScript</h3>\n<p><a href=\"./static/code/84eec1f2/0.png\">0.png</a> / <a href=\"./static/code/84eec1f2/AnimInfo.ts\">AnimInfo.ts</a> / <a href=\"./static/code/84eec1f2/Anim.ts\">Anim.ts</a> / <a href=\"./static/code/84eec1f2/app.ts\">app.ts</a></p>\n<h2>解説/アルゴリズム</h2>\n<p><img src=\"./static/code/84eec1f2/0.png\" alt=\"0.png\">\n再生するスプライト画像を用意します。</p>\n<h3>コード解説</h3>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AnimInfo</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 呼び出す際の名前</span>\n  <span class=\"token keyword\">public</span> frames<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// フレーム番号</span>\n  <span class=\"token keyword\">public</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// frames[index]のフレームを表示している</span>\n  <span class=\"token keyword\">public</span> delay<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// fps</span>\n  <span class=\"token keyword\">public</span> looped<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ループ再生するか？</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>\n    name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    frames<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span>\n    delay<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span>\n    looped<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>frames <span class=\"token operator\">=</span> frames<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>index <span class=\"token operator\">=</span> index<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>delay <span class=\"token operator\">=</span> delay<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>looped <span class=\"token operator\">=</span> looped<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">public</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>anim<span class=\"token operator\">:</span> Anim<span class=\"token punctuation\">,</span> p<span class=\"token operator\">:</span> p5<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// フレーム番号を取り出す</span>\n  <span class=\"token keyword\">const</span> frame <span class=\"token operator\">=</span> anim<span class=\"token punctuation\">.</span>curAnimInfo<span class=\"token punctuation\">.</span>frames<span class=\"token punctuation\">[</span>anim<span class=\"token punctuation\">.</span>curAnimInfo<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// フレームの(x, y)位置に分解する</span>\n  <span class=\"token keyword\">const</span> tx <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>frame <span class=\"token operator\">%</span> anim<span class=\"token punctuation\">.</span>chipXNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> ty <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>frame <span class=\"token operator\">/</span> anim<span class=\"token punctuation\">.</span>chipXNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  p<span class=\"token punctuation\">.</span><span class=\"token function\">copy</span><span class=\"token punctuation\">(</span>anim<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">,</span> tx <span class=\"token operator\">*</span> anim<span class=\"token punctuation\">.</span>chipWidth<span class=\"token punctuation\">,</span> ty <span class=\"token operator\">*</span> anim<span class=\"token punctuation\">.</span>chipHeight<span class=\"token punctuation\">,</span> anim<span class=\"token punctuation\">.</span>chipWidth<span class=\"token punctuation\">,</span> anim<span class=\"token punctuation\">.</span>chipHeight<span class=\"token punctuation\">,</span> anim<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> anim<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> anim<span class=\"token punctuation\">.</span>chipWidth <span class=\"token operator\">*</span> anim<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">,</span> anim<span class=\"token punctuation\">.</span>chipHeight <span class=\"token operator\">*</span> anim<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>anim<span class=\"token punctuation\">.</span>curAnimInfo <span class=\"token operator\">&&</span> anim<span class=\"token punctuation\">.</span>curAnimInfo<span class=\"token punctuation\">.</span>delay <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&&</span> <span class=\"token punctuation\">(</span>anim<span class=\"token punctuation\">.</span>curAnimInfo<span class=\"token punctuation\">.</span>looped <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>anim<span class=\"token punctuation\">.</span>finished<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 時間を進める。60FPS固定の前提条件なので必要ならコードを変えたほうがよい</span>\n    anim<span class=\"token punctuation\">.</span>time <span class=\"token operator\">+=</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// FPS調整</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>anim<span class=\"token punctuation\">.</span>time <span class=\"token operator\">></span> anim<span class=\"token punctuation\">.</span>curAnimInfo<span class=\"token punctuation\">.</span>delay<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      anim<span class=\"token punctuation\">.</span>time <span class=\"token operator\">-=</span> anim<span class=\"token punctuation\">.</span>curAnimInfo<span class=\"token punctuation\">.</span>delay<span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// インデックスの更新</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>anim<span class=\"token punctuation\">.</span>curAnimInfo<span class=\"token punctuation\">.</span>index <span class=\"token operator\">>=</span> anim<span class=\"token punctuation\">.</span>curAnimInfo<span class=\"token punctuation\">.</span>frames<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        anim<span class=\"token punctuation\">.</span>finished <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>anim<span class=\"token punctuation\">.</span>curAnimInfo<span class=\"token punctuation\">.</span>looped<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          anim<span class=\"token punctuation\">.</span>curAnimInfo<span class=\"token punctuation\">.</span>index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        anim<span class=\"token punctuation\">.</span>curAnimInfo<span class=\"token punctuation\">.</span>index<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n"}},"__N_SSG":true}