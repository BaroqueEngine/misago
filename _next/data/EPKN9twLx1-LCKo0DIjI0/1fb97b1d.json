{"pageProps":{"post":{"title":"誤差拡散法","slug":"1fb97b1d","content":"<h2>実行例</h2>\n<p><img src=\"./static/images/1fb97b1d/0.jpg\" alt=\"\">\n<img src=\"./static/images/1fb97b1d/2.png\" alt=\"\"></p>\n<h2>ソースコード</h2>\n<h3>解説用（右に伝搬 / TypeScript）</h3>\n<p><a href=\"./static/code/1fb97b1d/0/0.jpg\">0.jpg</a> / <a href=\"./static/code/1fb97b1d/0/app.ts\">app.ts</a></p>\n<h3>Floyd–Steinberg（左下/下/右下/右に伝搬 / TypeScript）</h3>\n<p><a href=\"./static/code/1fb97b1d/1/0.jpg\">0.jpg</a> / <a href=\"./static/code/1fb97b1d/1/app.ts\">app.ts</a></p>\n<h2>解説/アルゴリズム</h2>\n<p>誤差拡散法は二値化と同じように画像を白黒に変換するアルゴリズムです。</p>\n<h3>二値化との違い</h3>\n<p><a href=\"/19cf6463/\">二値化</a>ではあらかじめ決めておいた閾値をもとに白か黒に変換するかを判断します。</p>\n<p>たとえば閾値が 127 以下の場合は 0(黒)に、そうでなければ 255(白)に変換するとルールを決めます。</p>\n<p>対象のピクセルの明るさが 10 であれば 0 に、明るさが 240 であれば 255 になるという風に、対象のピクセルがもともと黒か白に近い明るさを真っ黒もしくは真っ白にするというのは納得がいきます。</p>\n<p>しかし、たとえば値が 127 のような灰色の明るさならどうでしょう。\n中間の明るさなのに閾値という単純なルールの比較だけで黒か白が決まるのでは、もともとの情報がかなり失われることになります。</p>\n<p>明るさが 100 の場合は 0 に変換されますが、もともとの明るさと比較して 100 の差が出ます。\n白に変換する場合でも同じで、たとえば値が 200 の場合、255 に変換されますが、55 の差が出ます。</p>\n<p>このような本来の値との差を&quot;誤差&quot;と呼び、この誤差を隣接しているピクセルにわたし、そのピクセルの二値化を行う際、渡した誤差情報を含めて判定するのが誤差拡散法の特徴です。</p>\n<p>つまり一つのピクセルではなく、周りのピクセルを含めて多角的に二値化の判定を行うと情報を減らさずに白黒にできるのではないか、というのがこのアルゴリズムの肝となります。</p>\n<p>この変換方法では二値化と同じように白か黒に変換しないのにも関わらず、実際の変換画像を見ると灰色が使用されているように見えます。このように少ない色で多くの明るさがあるかのように見せる仕組みを “ディザリング“ と呼びます。</p>\n<h3>右に誤差を渡す</h3>\n<pre class=\"language-typescript\"><code class=\"language-typescript\">gray <span class=\"token operator\">+=</span> prev<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 左のピクセルから受け取った明るさを自身に足す</span>\n<span class=\"token keyword\">let</span> c <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">color</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>threshold <span class=\"token operator\">&lt;</span> gray<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 閾値以上なので該当のピクセルを白にする</span>\n  c <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">color</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#fff\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 白(255)にするのでその値までの誤差を算出する</span>\n  prev <span class=\"token operator\">=</span> gray <span class=\"token operator\">-</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 閾値以上なので該当のピクセルを黒にする</span>\n  <span class=\"token comment\">// 黒(0)にするのでその値までの誤差を算出する</span>\n  prev <span class=\"token operator\">=</span> gray<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>右に誤差を伝播させるコード例です。<br>\n実行結果はモアレが目立つので実用的ではありませんが、誤差の伝播を説明するにはわかりやすいと思うのでまずはこの条件で説明します。</p>\n<p>例えば明るさが 200 の場合 255 に変換されますが、誤差は-55 となります。<br>\nこれは白(255)に変換されたが本来の値はこれよりも-55 の値なのでその誤差情報<code>-55</code>を右のピクセルに渡して加味させます。</p>\n<p>黒に変換する場合も同様で、例えば明るさが 100 の場合、誤差は 100 となります。<br>\n黒(0)に変換されたが本来の値はこれよりも 100 大きい値なのでその誤差情報<code>+100</code>を右のピクセルに渡して加味させます。</p>\n<p><img src=\"./static/images/1fb97b1d/1.png\" alt=\"\">\n右に伝搬する場合の実行結果です。</p>\n<h3>Floyd–Steinberg（左下/下/右下/右に誤差を渡す）</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">1</th>\n<th style=\"text-align:left\">2</th>\n<th style=\"text-align:left\">3</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">-</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">*</td>\n<td style=\"text-align:left\">7/16</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">3/16</td>\n<td style=\"text-align:left\">5/16</td>\n<td style=\"text-align:left\">1/16</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>右に 7/16</li>\n<li>左下に 3/16</li>\n<li>下に 5/16</li>\n<li>右下に 1/16</li>\n</ul>\n<p>Floyd–Steinberg はディザリングで最も有名な誤差分配です。</p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> image<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span> y<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> image<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>画像の走査は左から右、上から下に行うのが前提となります。</p>\n<p><img src=\"./static/images/1fb97b1d/2.png\" alt=\"\">\nFloyd–Steinberg 法で伝搬する場合の実行結果です。</p>\n<h2>コード例</h2>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> p5 <span class=\"token keyword\">from</span> <span class=\"token string\">\"p5\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">p5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">:</span> p5<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> image<span class=\"token operator\">:</span> p5<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">;</span>\n\n  p<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">preload</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    image <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">loadImage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./0.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  p<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setup</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    p<span class=\"token punctuation\">.</span><span class=\"token function\">createCanvas</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>windowWidth<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>windowHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    image<span class=\"token punctuation\">.</span><span class=\"token function\">loadPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 誤差情報を格納する二次元配列</span>\n    <span class=\"token keyword\">const</span> error<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> image<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span> y<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      error<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> image<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        error<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 二値化のしきい値</span>\n    <span class=\"token keyword\">const</span> threshold <span class=\"token operator\">=</span> <span class=\"token number\">127</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 画像の全ピクセルを走査</span>\n    <span class=\"token comment\">// 走査は左から右、上から下に行う</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> image<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span> y<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> image<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 対象のピクセルを取り出す</span>\n        <span class=\"token keyword\">const</span> color <span class=\"token operator\">=</span> <span class=\"token function\">getPixel</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 取り出したピクセルからRGBを抽出</span>\n        <span class=\"token keyword\">const</span> r <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">red</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> g <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">green</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">blue</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// ピクセルの明るさとしてグレースケールを利用する</span>\n        <span class=\"token keyword\">let</span> gray <span class=\"token operator\">=</span> <span class=\"token number\">0.299</span> <span class=\"token operator\">*</span> r <span class=\"token operator\">+</span> <span class=\"token number\">0.587</span> <span class=\"token operator\">*</span> g <span class=\"token operator\">+</span> <span class=\"token number\">0.114</span> <span class=\"token operator\">*</span> b<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 明るさに別ピクセルで発生した誤差情報を加味</span>\n        gray <span class=\"token operator\">+=</span> error<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 二値化計算</span>\n        <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>threshold <span class=\"token operator\">&lt;=</span> gray<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          value <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 本来の値との誤差を計算</span>\n        <span class=\"token comment\">// Floyd–Steinberg法では誤差*n/16の値を渡すので、先に16で割っておく。</span>\n        <span class=\"token keyword\">const</span> e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>gray <span class=\"token operator\">-</span> value<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 誤差を渡す方向が範囲内なら該当のピクセルの誤差情報配列に誤差を加味させる</span>\n        <span class=\"token comment\">// 上で既に16で割っているので、分子の値だけ掛ければよい。</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">onBoard</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          error<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> e <span class=\"token operator\">*</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">onBoard</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          error<span class=\"token punctuation\">[</span>y <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>x <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> e <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">onBoard</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          error<span class=\"token punctuation\">[</span>y <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> e <span class=\"token operator\">*</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">onBoard</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          error<span class=\"token punctuation\">[</span>y <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> e<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 対象のピクセルの色を白か黒に変換</span>\n        <span class=\"token function\">setPixel</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    image<span class=\"token punctuation\">.</span><span class=\"token function\">updatePixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    p<span class=\"token punctuation\">.</span><span class=\"token function\">image</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">onBoard</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> x <span class=\"token operator\">&amp;&amp;</span> x <span class=\"token operator\">&lt;</span> image<span class=\"token punctuation\">.</span>width <span class=\"token operator\">&amp;&amp;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> y <span class=\"token operator\">&amp;&amp;</span> y <span class=\"token operator\">&lt;</span> image<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">getPixel</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">*</span> image<span class=\"token punctuation\">.</span>width <span class=\"token operator\">+</span> x<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n      image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">setPixel</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">*</span> image<span class=\"token punctuation\">.</span>width <span class=\"token operator\">+</span> x<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n    image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2>内部で利用しているアルゴリズム</h2>\n<p><a href=\"/359993fd/\">グレースケール</a></p>\n"}},"__N_SSG":true}