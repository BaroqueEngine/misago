{"pageProps":{"post":{"title":"速さと速度","slug":"da0dbd56","content":"<h2>解説/アルゴリズム</h2>\n<h3>速さ</h3>\n<p><code>[速さ] = [移動距離] ÷ [経過時間]</code></p>\n<p><code>速さ</code>は移動距離を経過時間で割ることで算出できます。</p>\n<ul>\n<li>100m を 10 秒で走ったときの速さは <code>100m / 10秒 = 10m/秒</code></li>\n<li>30km を 2 時間で走ったときの速さは <code>30km / 2時間 = 15km/時間</code></li>\n</ul>\n<p>つまり単位時間あたりに移動する平均の距離のことを速さと呼びます。</p>\n<p>これはアニメーションでも同様で、例えばオブジェクトを動かすコードで考えてみます。</p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  object<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+=</span> <span class=\"token operator\">??</span><span class=\"token operator\">?</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 5秒間で100px動かすにはどういう値を入れればいいのか？</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>オブジェクトが 5 秒間で 100px 動くにはどういう速さを設定すればいいのでしょうか。</p>\n<p>移動距離を経過時間で割ることで速さが求まるので、<code>100px / 5秒 = 20px/秒</code>。<br>\nつまり、1 秒に 20px 動かせば、5 秒で 100px 動く、という計算になります。</p>\n<p>次は実際に 5 秒で 100px 動かすコードをどう書くのかを考えてみます。</p>\n<p>60FPS で動作する環境の場合、1 秒間に約 60 回、更新用の関数が呼ばれます。<br>\n今は 5 秒間の範囲で考えているので<code>5 * 60 = 300</code>。つまり 5 秒間で更新の関数が呼ばれる回数は約 300 回となります。</p>\n<p>更新の関数が 1 回呼ばれることを 1 フレームと言い直すと、300 フレームかけて 100px 動かす、ということになりますから、速さを求める式の移動距離に 100px、経過時間を 300 フレームとして割り当てると下記の計算式となります。</p>\n<p><code>100px / 300フレーム = 約0.333px/フレーム</code></p>\n<p>1 フレームあたりに約 0.333px 動かせば 5 秒で約 100px 移動することがわかりました。</p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// 60FPSの環境で、objectのx位置を5秒かけて約100px動かす速さを設定する場合</span>\n\n<span class=\"token keyword\">const</span> speed <span class=\"token operator\">=</span> <span class=\"token number\">100</span> <span class=\"token operator\">/</span> <span class=\"token number\">300</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  object<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+=</span> speed<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>実際にコードで書き直したものがこちらです。<br>\n100 が移動距離、300 が経過時間、100/300 の計算結果が速さになります。</p>\n<h3>変位</h3>\n<p>物体がある地点から別の地点まで移動した変化の量を<code>変位</code>と呼びます。</p>\n<p>ある地点にボールが置かれているとして、そこからボールが西に 10m 移動した場合の変位は-10m、東に 10m 移動した場合の変位は+10m になります。<br>\n距離の場合、西に 10m ずれようが東に 10m ずれようが、ボールが移動した距離は 10m になりますが、変位はずれた方向を情報として含みます。つまり値に符号が存在します。</p>\n<h3>速度</h3>\n<p><code>[速度] = [変位] ÷ [経過時間]</code></p>\n<p><code>速度</code> は変位を経過時間で割ることで算出できます。</p>\n<ul>\n<li>西に向かって 100m の距離を 10 秒で走ったときの速度は <code>-100m / 10秒 = -10m/秒</code></li>\n<li>西に向かって 30km の距離を 2 時間で走ったときの速度は <code>-30km / 2時間 = -15km/時間</code></li>\n</ul>\n<p>次はコード例です。</p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> speed <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">100</span> <span class=\"token operator\">/</span> <span class=\"token number\">300</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  object<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+=</span> speed<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>符号が付いている変位を経過時間で割っているので、計算結果の速度も符号が付きます。</p>\n<p>つまり、速度は速さと方向を持つのです。</p>\n<p>次はこの速度の実装について考えてみます。</p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Velocity</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  y<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>位置情報が(x, y)のように軸ごとに変数として用意されることが多いのに合わせて、速度の情報も軸にあわせて用意されるのがほとんどだと思います。</p>\n<p>方向は符号で判断できますし、速度は位置に足し合わせる場合が多いので、位置の変数に合わせて速度が用意されるのが多いからです。</p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Velocity</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  dir<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  speed<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>速さと速度をそのまま変数にする方法もありますが、上記の理由からあまり見かけることはありません。</p>\n<h3>名前</h3>\n<p>速度を入れる変数名として <code>speed</code>、 <code>vx</code> や <code>vy</code> などが使われます。<br>\nオブジェクトの名前を v(elocity)にして、v.x, v.y を速度にするのもよく使われる手法です。</p>\n"}},"__N_SSG":true}