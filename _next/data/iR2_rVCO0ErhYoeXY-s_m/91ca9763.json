{"pageProps":{"post":{"title":"累積和","slug":"91ca9763","content":"<h2>コード例</h2>\n<pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> v <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> t <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> v<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    t<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> v<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  cout <span class=\"token operator\">&lt;&lt;</span> t<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> t<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [0, 5) => 19</span>\n  cout <span class=\"token operator\">&lt;&lt;</span> t<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> t<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [2, 5) => 15</span>\n  cout <span class=\"token operator\">&lt;&lt;</span> t<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> t<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [2, 2) => 0</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2>解説/アルゴリズム</h2>\n<p>累積和は、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> O(N) </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span> の前処理を行うことによって、配列上の区間の総和を <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> で求めることができるアルゴリズムです。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">添字</th>\n<th style=\"text-align:left\">[0]</th>\n<th style=\"text-align:left\">[1]</th>\n<th style=\"text-align:left\">[2]</th>\n<th style=\"text-align:left\">[3]</th>\n<th style=\"text-align:left\">[4]</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">要素</td>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">5</td>\n<td style=\"text-align:left\">8</td>\n<td style=\"text-align:left\">2</td>\n</tr>\n</tbody>\n</table>\n<p>まず対象となる配列 v を用意します。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">添字</th>\n<th style=\"text-align:left\">[0]</th>\n<th style=\"text-align:left\">[1]</th>\n<th style=\"text-align:left\">[2]</th>\n<th style=\"text-align:left\">[3]</th>\n<th style=\"text-align:left\">[4]</th>\n<th style=\"text-align:left\">[5]</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">計算式</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">[0]</td>\n<td style=\"text-align:left\">[0]+[1]</td>\n<td style=\"text-align:left\">[0]+[1]+[2]</td>\n<td style=\"text-align:left\">[0]+[1]+[2]+[3]</td>\n<td style=\"text-align:left\">[0]+[1]+[2]+[3]+[4]</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">要素</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:left\">4</td>\n<td style=\"text-align:left\">9</td>\n<td style=\"text-align:left\">17</td>\n<td style=\"text-align:left\">19</td>\n</tr>\n</tbody>\n</table>\n<p>新しい配列 t を用意して下記の計算式で値を代入していきます。</p>\n<ul>\n<li>t[0] には 0</li>\n<li>t[1] には v[0]</li>\n<li>t[2] には v[0] + v[1]</li>\n<li>t[3] には v[0] + v[1] + v[2]</li>\n<li>t[n] には v[0] + v[1] + v[2] + ... v[n - 1]</li>\n</ul>\n<p>と配列に値を入れていきます。</p>\n<pre class=\"language-cpp\"><code class=\"language-cpp\">vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> v <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nvector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> t <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> v<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  t<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> v<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>この代入処理はコード例のように <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span> で記述できます。</p>\n<pre class=\"language-cpp\"><code class=\"language-cpp\">cout <span class=\"token operator\">&lt;&lt;</span> t<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> t<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [0, 5) => 19</span>\ncout <span class=\"token operator\">&lt;&lt;</span> t<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> t<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [2, 5) => 15</span>\ncout <span class=\"token operator\">&lt;&lt;</span> t<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> t<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [2, 2) => 0</span>\n</code></pre>\n<p>求めた配列 t を <code>t[b] - t[a]</code> のように使用すると、v[a]～ v[b-1] の値の総和を求めることができます。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">添字</th>\n<th style=\"text-align:left\">[0]</th>\n<th style=\"text-align:left\">[1]</th>\n<th style=\"text-align:left\">[2]</th>\n<th style=\"text-align:left\">[3]</th>\n<th style=\"text-align:left\">[4]</th>\n<th style=\"text-align:left\">[5]</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">計算式</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">[0]</td>\n<td style=\"text-align:left\">[0]+[1]</td>\n<td style=\"text-align:left\">[0]+[1]+[2]</td>\n<td style=\"text-align:left\">[0]+[1]+[2]+[3]</td>\n<td style=\"text-align:left\">[0]+[1]+[2]+[3]+[4]</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">要素</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:left\">4</td>\n<td style=\"text-align:left\">9</td>\n<td style=\"text-align:left\">17</td>\n<td style=\"text-align:left\">19</td>\n</tr>\n</tbody>\n</table>\n<p>たとえば <code>t[5] - t[2]</code> というのは、配列 v の <code>[0]+[1]+[2]+[3]+[4] - [0]+[1]</code> で、 <code>[0]+[1]</code> の部分が消えて <code>[2]+[3]+[4]</code> だけが残るのがわかります。</p>\n"}},"__N_SSG":true}