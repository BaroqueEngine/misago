{"pageProps":{"post":{"title":"ポスタリゼーション","slug":"f7d001c2","content":"<h2>実行例</h2>\n<p><img src=\"./static/images/f7d001c2/0.jpg\" alt=\"\">\n<img src=\"./static/images/f7d001c2/1.png\" alt=\"\"></p>\n<h2>ソースコード</h2>\n<h3>TypeScript</h3>\n<p><a href=\"./static/code/f7d001c2/0.jpg\">0.jpg</a> / <a href=\"./static/code/f7d001c2/app.ts\">app.ts</a></p>\n<h2>解説/アルゴリズム</h2>\n<p>フルカラー画像の場合、RGB それぞれの値の範囲は 0 ～ 255 の 256 階調になる。</p>\n<p>このような階調を意図的に落として色の変化を行なう処理のことをポスタリゼーションと呼ぶ。</p>\n<p>例えば 2 階調まで落とす場合を考える。</p>\n<p>2 階調まで落とすということは、RGB それぞれの値が 2 種類しか使用できない。</p>\n<p>たとえば適当に、2 種類の値を 0, 1 にしてみた場合の色の組み合わせは下記の通りとなる。</p>\n<ul>\n<li>0x000000 (赤:0 緑:0 青:0)</li>\n<li>0x000001 (赤:0 緑:0 青:1)</li>\n<li>0x000100 (赤:0 緑:1 青:0)</li>\n<li>0x000101 (赤:0 緑:1 青:1)</li>\n<li>0x010000 (赤:1 緑:0 青:0)</li>\n<li>0x010001 (赤:1 緑:0 青:1)</li>\n<li>0x010100 (赤:1 緑:1 青:0)</li>\n<li>0x010101 (赤:1 緑:1 青:1)</li>\n</ul>\n<p>RGB それぞれ 0, 1 の 2 種類の値のみを使用しているので 2 階調にはなっているが、8 種類の色はほとんど黒色になる。</p>\n<p>これで画像を変換した場合、真っ黒な画像ができあがる。</p>\n<p>それに加え、もともと 0 ～ 255 の値をどのようにして 0 と 1 に振り分けるかの条件も考えなければならない。</p>\n<p>以上のことから見て、階調を落とす場合は、下記 2 つの要素をよく考える必要がある。</p>\n<ul>\n<li>使用できる値の選別</li>\n<li>もともとある値をどのようにして使用できる値に振り分けるか</li>\n</ul>\n<p>一般的に 2 階調の場合、使用できる値は 0 と 255 が選ばれる。</p>\n<p>この 2 つを選ばないと、上記で別の値を選んだ結果のように、明るさの最大と最小の範囲が狭くなり、いわゆるコントラストが低下してしまう。</p>\n<p>次にもともとの範囲 0 ～ 255 をどのように 0 と 255 に振り分けるかだが、これは振り分ける数がおなじになるように調整する。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">256 階調</th>\n<th style=\"text-align:left\">0 ～ 127</th>\n<th style=\"text-align:left\">128 ～ 255</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">2 階調</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">255</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">振り分けた数</td>\n<td style=\"text-align:left\">128</td>\n<td style=\"text-align:left\">128</td>\n</tr>\n</tbody>\n</table>\n<p>計算がしやすそうで、色が近い方に振り分けられており、理にかなっている。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">256 階調</th>\n<th style=\"text-align:left\">0 ～ 85</th>\n<th style=\"text-align:left\">86 ～ 170</th>\n<th style=\"text-align:left\">171 ～ 255</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">3 階調</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">128</td>\n<td style=\"text-align:left\">255</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">振り分けた数</td>\n<td style=\"text-align:left\">86</td>\n<td style=\"text-align:left\">85</td>\n<td style=\"text-align:left\">85</td>\n</tr>\n</tbody>\n</table>\n<p>3 階調の場合も振り分ける数を同じにしたいので、256 / 3 ≒ 85 を選ぶ。</p>\n<p>0, 255 以外に選べる値を決めないといけないが、これもコントラストの観点から、0 と 255 のちょうど間にある値を選ぶ。</p>\n<p>(0 + 255) / 2 = 127.5 は整数ではないので、選ぶ値は 127 か 128 にする。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">256 階調</th>\n<th style=\"text-align:left\">0 ～ 63</th>\n<th style=\"text-align:left\">64 ～ 127</th>\n<th style=\"text-align:left\">128 ～ 191</th>\n<th style=\"text-align:left\">192 ～ 255</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">4 階調</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">86</td>\n<td style=\"text-align:left\">192</td>\n<td style=\"text-align:left\">255</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">振り分けた数</td>\n<td style=\"text-align:left\">64</td>\n<td style=\"text-align:left\">64</td>\n<td style=\"text-align:left\">64</td>\n<td style=\"text-align:left\">64</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">256 階調</th>\n<th style=\"text-align:left\">0 ～ 51</th>\n<th style=\"text-align:left\">52 ～ 102</th>\n<th style=\"text-align:left\">103 ～ 153</th>\n<th style=\"text-align:left\">154 ～ 204</th>\n<th style=\"text-align:left\">205 ～ 255</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">5 階調</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">64</td>\n<td style=\"text-align:left\">128</td>\n<td style=\"text-align:left\">192</td>\n<td style=\"text-align:left\">255</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">振り分けた数</td>\n<td style=\"text-align:left\">52</td>\n<td style=\"text-align:left\">51</td>\n<td style=\"text-align:left\">51</td>\n<td style=\"text-align:left\">51</td>\n<td style=\"text-align:left\">51</td>\n</tr>\n</tbody>\n</table>\n<p>4 階調、5 階調、それ以上の場合も同じように振り分ける。</p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// (256階調時の)値</span>\n<span class=\"token keyword\">const</span> fromMax <span class=\"token operator\">=</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// もとの階調</span>\n<span class=\"token keyword\">const</span> toMax <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 変換後の階調</span>\n\n<span class=\"token keyword\">const</span> i <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>toMax <span class=\"token operator\">/</span> fromMax<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> v <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">ceil</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>fromMax <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>toMax <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">256 階調</th>\n<th style=\"text-align:left\">0 ～ 85</th>\n<th style=\"text-align:left\">86 ～ 170</th>\n<th style=\"text-align:left\">171 ～ 255</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">インデックス(i)</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">2</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">3 階調</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">128</td>\n<td style=\"text-align:left\">255</td>\n</tr>\n</tbody>\n</table>\n<p>to 階調 / from 階調 * もとの値で、もとの値が to 階調になった場合の値を求める。</p>\n<p>その値の小数点を切り捨てると、上記表の区分に対するインデックス値になる。</p>\n<p>変換後の階調値は <code>(from階調 - 1) / (to階調 - 1) * インデックス値</code> で求める。</p>\n<p>割り切れない場合があるので、切り捨て、もしくは切り上げ処理を行う。</p>\n<h2>コード例(GLSL)</h2>\n<pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token keyword\">attribute</span> <span class=\"token keyword\">vec2</span> aPosition<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">attribute</span> <span class=\"token keyword\">vec2</span> aTexCoord<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">uniform</span> <span class=\"token keyword\">vec2</span> uResolution<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">varying</span> <span class=\"token keyword\">vec2</span> vTexCoord<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">vec2</span> clipSpace <span class=\"token operator\">=</span> aPosition <span class=\"token operator\">/</span> uResolution <span class=\"token operator\">*</span> <span class=\"token number\">2.0</span> <span class=\"token operator\">-</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n  gl_Position <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>clipSpace <span class=\"token operator\">*</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  vTexCoord <span class=\"token operator\">=</span> aTexCoord<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token keyword\">precision</span> <span class=\"token keyword\">mediump</span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> fromMax <span class=\"token operator\">=</span> <span class=\"token number\">256.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> toMax <span class=\"token operator\">=</span> <span class=\"token number\">4.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">uniform</span> <span class=\"token keyword\">sampler2D</span> uImage<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">varying</span> <span class=\"token keyword\">vec2</span> vTexCoord<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">float</span> <span class=\"token function\">posterize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  v <span class=\"token operator\">*=</span> <span class=\"token punctuation\">(</span>fromMax <span class=\"token operator\">-</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">float</span> i <span class=\"token operator\">=</span> <span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>toMax <span class=\"token operator\">/</span> fromMax <span class=\"token operator\">*</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">float</span> a <span class=\"token operator\">=</span> <span class=\"token function\">ceil</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>fromMax <span class=\"token operator\">-</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>toMax <span class=\"token operator\">-</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> a <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>fromMax <span class=\"token operator\">-</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">vec4</span> color <span class=\"token operator\">=</span> <span class=\"token function\">texture2D</span><span class=\"token punctuation\">(</span>uImage<span class=\"token punctuation\">,</span> vTexCoord<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">float</span> r <span class=\"token operator\">=</span> <span class=\"token function\">posterize</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">float</span> g <span class=\"token operator\">=</span> <span class=\"token function\">posterize</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">float</span> b <span class=\"token operator\">=</span> <span class=\"token function\">posterize</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gl_FragColor <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2>コード例(p5.js)</h2>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> p5 <span class=\"token keyword\">from</span> <span class=\"token string\">\"p5\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">p5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">:</span> p5<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> image<span class=\"token operator\">:</span> p5<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">;</span>\n\n  p<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">preload</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    image <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">loadImage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./0.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  p<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setup</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    p<span class=\"token punctuation\">.</span><span class=\"token function\">createCanvas</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>windowWidth<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>windowHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    image<span class=\"token punctuation\">.</span><span class=\"token function\">loadPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> fromMax <span class=\"token operator\">=</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// もとの階調</span>\n    <span class=\"token keyword\">const</span> toMax <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 変換後の階調</span>\n\n    <span class=\"token comment\">// 画像の全ピクセルを走査</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> image<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span> y<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> image<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 対象のピクセルを取り出す</span>\n        <span class=\"token keyword\">const</span> color <span class=\"token operator\">=</span> <span class=\"token function\">getPixel</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 取り出したピクセルからRGBを抽出</span>\n        <span class=\"token keyword\">const</span> r <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">red</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> g <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">green</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">blue</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 減色したRGB値を取得</span>\n        <span class=\"token keyword\">const</span> nr <span class=\"token operator\">=</span> <span class=\"token function\">posterize</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> fromMax<span class=\"token punctuation\">,</span> toMax<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> ng <span class=\"token operator\">=</span> <span class=\"token function\">posterize</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">,</span> fromMax<span class=\"token punctuation\">,</span> toMax<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> nb <span class=\"token operator\">=</span> <span class=\"token function\">posterize</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> fromMax<span class=\"token punctuation\">,</span> toMax<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 減色したRGB値をピクセルにセットし直す</span>\n        <span class=\"token function\">setPixel</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>nr<span class=\"token punctuation\">,</span> ng<span class=\"token punctuation\">,</span> nb<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    image<span class=\"token punctuation\">.</span><span class=\"token function\">updatePixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    p<span class=\"token punctuation\">.</span><span class=\"token function\">image</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">posterize</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> fromMax<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> toMax<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> i <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>toMax <span class=\"token operator\">/</span> fromMax<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> v <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">ceil</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>fromMax <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>toMax <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> v<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">getPixel</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">*</span> image<span class=\"token punctuation\">.</span>width <span class=\"token operator\">+</span> x<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n      image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">setPixel</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">*</span> image<span class=\"token punctuation\">.</span>width <span class=\"token operator\">+</span> x<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n    image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2>内部で利用しているアルゴリズム</h2>\n<p><a href=\"/0fd2eac9\">床関数</a>, <a href=\"/286b997e\">天井関数</a></p>\n"}},"__N_SSG":true}