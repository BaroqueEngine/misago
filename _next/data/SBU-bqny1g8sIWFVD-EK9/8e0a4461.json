{"pageProps":{"post":{"title":"モーションブラー","slug":"8e0a4461","content":"<h2>実行例</h2>\n<p><img src=\"./static/images/8e0a4461/0.jpg\" alt=\"\">\n<img src=\"./static/images/8e0a4461/1.png\" alt=\"\"></p>\n<h2>ソースコード</h2>\n<h3>TypeScript</h3>\n<p><a href=\"./static/code/8e0a4461/0.jpg\">0.jpg</a> / <a href=\"./static/code/8e0a4461/app.ts\">app.ts</a></p>\n<h2>解説/アルゴリズム</h2>\n<p><img src=\"./static/images/8e0a4461/2.png\" alt=\"\">\nあるピクセルに注目して、そのピクセルと斜めにあるピクセルの平均値を RGB ごとに算出します。<br>\n算出した RGB ごとの平均値を、別に用意した新しい画像の同じ位置にピクセルとして代入します。</p>\n<p>同じ画像のピクセルに計算結果を上書きすると、別のピクセルで平均値を算出する際に、もとのピクセルの値ではなく計算済みの平均値を取得してしまう場合がでてくるため、新しいピクセルに計算結果を入れます。</p>\n<p>斜めの範囲を広げると、その分大きくぶれたブラーが出来ます。</p>\n<p><img src=\"./static/images/8e0a4461/3.png\" alt=\"\">\n範囲計算の際にインデックスがはみ出る場合はその部分の計算は行いません。<br>\n上記だと、(171 + 180) / 2 ≒ 175 を新しい画像のピクセルに代入します。</p>\n<h2>コード例</h2>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> p5 <span class=\"token keyword\">from</span> <span class=\"token string\">\"p5\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">p5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">:</span> p5<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> image<span class=\"token operator\">:</span> p5<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ブラーの範囲</span>\n  <span class=\"token keyword\">const</span> range <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\n  p<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">preload</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    image <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">loadImage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./0.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  p<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setup</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    p<span class=\"token punctuation\">.</span><span class=\"token function\">createCanvas</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>windowWidth<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>windowHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// モーションブラー出力用の新しい画像を用意する</span>\n    <span class=\"token keyword\">const</span> dest <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">createImage</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> image<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    dest<span class=\"token punctuation\">.</span><span class=\"token function\">copy</span><span class=\"token punctuation\">(</span>\n      image<span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      image<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>\n      image<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      image<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>\n      image<span class=\"token punctuation\">.</span>height\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    dest<span class=\"token punctuation\">.</span><span class=\"token function\">loadPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> image<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span> y<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> image<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// RGBそれぞれの合計</span>\n        <span class=\"token keyword\">let</span> tr <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> tg <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> tb <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 対象となるピクセル数</span>\n        <span class=\"token keyword\">let</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 左上から右下、range分だけ斜めに走査</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>range<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> range<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> ty <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> i<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> tx <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> i<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> ty <span class=\"token operator\">&amp;&amp;</span> ty <span class=\"token operator\">&lt;</span> image<span class=\"token punctuation\">.</span>height <span class=\"token operator\">&amp;&amp;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> tx <span class=\"token operator\">&amp;&amp;</span> tx <span class=\"token operator\">&lt;</span> image<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> color <span class=\"token operator\">=</span> <span class=\"token function\">getPixel</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> tx<span class=\"token punctuation\">,</span> ty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">const</span> r <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">red</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">const</span> g <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">green</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">blue</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            tr <span class=\"token operator\">+=</span> r<span class=\"token punctuation\">;</span>\n            tg <span class=\"token operator\">+=</span> g<span class=\"token punctuation\">;</span>\n            tb <span class=\"token operator\">+=</span> b<span class=\"token punctuation\">;</span>\n            count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// RGBごとに平均を取る</span>\n        tr <span class=\"token operator\">/=</span> count<span class=\"token punctuation\">;</span>\n        tg <span class=\"token operator\">/=</span> count<span class=\"token punctuation\">;</span>\n        tb <span class=\"token operator\">/=</span> count<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 平均の色で斜めに走査したピクセルを塗りつぶす</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> yy <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> yy <span class=\"token operator\">&lt;</span> range<span class=\"token punctuation\">;</span> yy<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> xx <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> xx <span class=\"token operator\">&lt;</span> range<span class=\"token punctuation\">;</span> xx<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> ty <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> yy<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">const</span> tx <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> xx<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ty <span class=\"token operator\">&lt;</span> image<span class=\"token punctuation\">.</span>height <span class=\"token operator\">&amp;&amp;</span> tx <span class=\"token operator\">&lt;</span> image<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token function\">setPixel</span><span class=\"token punctuation\">(</span>dest<span class=\"token punctuation\">,</span> tx<span class=\"token punctuation\">,</span> ty<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>tr<span class=\"token punctuation\">,</span> tg<span class=\"token punctuation\">,</span> tb<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    dest<span class=\"token punctuation\">.</span><span class=\"token function\">updatePixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    p<span class=\"token punctuation\">.</span><span class=\"token function\">image</span><span class=\"token punctuation\">(</span>dest<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">getPixel</span><span class=\"token punctuation\">(</span>image<span class=\"token operator\">:</span> p5<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">,</span> x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">*</span> image<span class=\"token punctuation\">.</span>width <span class=\"token operator\">+</span> x<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n      image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">setPixel</span><span class=\"token punctuation\">(</span>image<span class=\"token operator\">:</span> p5<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">,</span> x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">*</span> image<span class=\"token punctuation\">.</span>width <span class=\"token operator\">+</span> x<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n    image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    image<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n"}},"__N_SSG":true}