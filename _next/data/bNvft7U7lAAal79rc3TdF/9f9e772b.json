{"pageProps":{"post":{"title":"線形補間","slug":"9f9e772b","content":"<h2>概要</h2>\n<p><code>線形補間</code>は、線分 AB 上で、時間 t の時点での位置を求めます。<br>\nt は 0 ～ 1 の範囲の値で、0 のときは A、1 のときは B の位置を返し、その間の値、たとえば t が 0.4 の場合は、A から B へ直線で向かう場合の 40%の位置を返します。</p>\n<p>たとえば A = 10, B = 20, t = 0.4 の値で線形補間をすると、14 の値が返ります。</p>\n<h2>コード例</h2>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">lerp</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> t<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">-</span> a<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> t<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">lerp</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 10</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">lerp</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 12</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">lerp</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 15</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">lerp</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 18</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">lerp</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 20</span>\n</code></pre>\n<p>a ～ b の値の範囲で、t の位置にある値を返します。(t = 0.0 ～ 1.0)</p>\n<h2>解説/アルゴリズム</h2>\n<p>範囲が 50 ～ 200、位置が 0.3(30%)の値を求めてみます。<br>\n50 ～ 200 の範囲は、<code>200 - 50 = 150</code>で下限～上限まで 150 あることが分かります。<br>\n（下限と上限を 50 引いて、50 ～ 200 を 0 ～ 150 の範囲に変換した、と考えてもよいです）</p>\n<p>この計算によって得られた 150 というのが実際の値の範囲で、この値に求めたい位置 0.3 を掛けます。<br>\n<code>150 * 0.3 = 45</code></p>\n<p>この 45 というのが 0 ～ 150 の範囲で 0.3(30%)の位置にある値になります。<br>\nただ、実際の範囲は 50 を足した 50 ～ 200 であるので、計算結果の 45 に 50 を足したものが正しい値ということになります。</p>\n<p><code>(200 - 50) * 0.3 + 50 = 95</code></p>\n<h2>式の変形</h2>\n<pre class=\"language-text\"><code class=\"language-text\">// 線形補間の式\nv = a + (b - a) * t\n\n// 両辺からaを引く\nv - a = (b - a) * t\n\n// (b - a)で割る\n(v - a) / (b - a) = t\n\n// 左辺と右辺を入れ替える\nt = (v - a) / (b - a)\n</code></pre>\n<p>線形補間の式を、t について解く形に変形すると、正規化のアルゴリズムとなります。</p>\n<pre class=\"language-text\"><code class=\"language-text\">// 線形補間の式\nv = a + (b - a) * t\n\n// 右辺を展開する\nv = a + b * t - a * t\n\n// 右辺を並び替える\nv = a - a * t + b * t\n\n// 右辺をaで括る\nv = a * (1 - t) + b * t\n</code></pre>\n<p>この変形して得られた(1 - t) : t の比でブレンドする線形補間の形もよく利用されます。</p>\n"}},"__N_SSG":true}