{"pageProps":{"post":{"title":"マップ生成3","slug":"8e6de1a0","content":"<h2>実行結果</h2>\n<p><img src=\"./static/images/8e6de1a0/0.png\" alt=\"\">\n<a href=\"./static/play/8e6de1a0/index.html\">実行結果を見る</a></p>\n<h2>ソースコード</h2>\n<h3>通路が一本道</h3>\n<p><a href=\"./static/code/8e6de1a0/0/rectangle.ts\">rectangle.ts</a> / <a href=\"./static/code/8e6de1a0/0/mathutil.ts\">mathutil.ts</a> / <a href=\"./static/code/8e6de1a0/0/app.ts\">app.ts</a></p>\n<h3>通路が複数</h3>\n<p><a href=\"./static/code/8e6de1a0/1/rectangle.ts\">rectangle.ts</a> / <a href=\"./static/code/8e6de1a0/1/mathutil.ts\">mathutil.ts</a> / <a href=\"./static/code/8e6de1a0/1/app.ts\">app.ts</a></p>\n<h2>解説/アルゴリズム</h2>\n<h3>全体の流れ</h3>\n<ol>\n<li>用意した矩形を再帰的に分割を行い、幾つかの領域を作成します。</li>\n<li>各領域の中に部屋を作ります。</li>\n<li>部屋同士を通路で繋ぎます。</li>\n</ol>\n<h3>矩形分割</h3>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// 領域の最低サイズ</span>\n<span class=\"token keyword\">const</span> minPartitionSize <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 矩形を分割するには最低この値以上のサイズが必要（領域2つと通路1マス）</span>\n<span class=\"token keyword\">const</span> splitRectSize <span class=\"token operator\">=</span> minPartitionSize <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">splitRect</span><span class=\"token punctuation\">(</span>rect<span class=\"token operator\">:</span> Rectangle<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Rectangle<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 領域2つの最低サイズと通路用の1マス分が確保できなければ、これ以上分割をしない</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span><span class=\"token function\">height</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">)</span> <span class=\"token operator\"><</span> splitRectSize <span class=\"token operator\">||</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">)</span> <span class=\"token operator\"><</span> splitRectSize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>rect<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">let</span> a<span class=\"token operator\">:</span> Rectangle<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> b<span class=\"token operator\">:</span> Rectangle<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 縦横長い方を分割する</span>\n  <span class=\"token comment\">// 分割する際、領域の最低サイズさえ守ればどこから分割しても構わない</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span><span class=\"token function\">height</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 縦長なので横に分割する</span>\n\n    <span class=\"token comment\">// 現在のサイズから領域2つと通路1マスを引いた余る、サイズを計算</span>\n    <span class=\"token keyword\">const</span> space <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">height</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> splitRectSize<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 上の領域のサイズ（下端位置）を計算</span>\n    <span class=\"token comment\">// 領域の最低サイズ+余っているサイズをランダムに不可</span>\n    <span class=\"token keyword\">const</span> aBottom <span class=\"token operator\">=</span> rect<span class=\"token punctuation\">.</span>top <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>minPartitionSize <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">rangeInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> space<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    a <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">,</span> aBottom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 下の領域の上端位置はは上の領域から通路を挟んだ2つ下。</span>\n    b <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span> aBottom <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span>bottom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 横長なので縦に分割する</span>\n    <span class=\"token comment\">// アルゴリズムは上記と同じ</span>\n\n    <span class=\"token keyword\">const</span> space <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> splitRectSize<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> aRight <span class=\"token operator\">=</span> rect<span class=\"token punctuation\">.</span>left <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>minPartitionSize <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">rangeInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> space<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    a <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">,</span> aRight<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span>bottom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    b <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>aRight <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span>bottom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 分割したa, bを更に分割するために再帰呼び出しをする</span>\n  <span class=\"token comment\">// これ以上分割できないRectangleが[rect]という形で返却されるので、Array#concatで統合する</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">splitRect</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token function\">splitRect</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>引数で渡した矩形領域を再帰的に分割します。<br>\n領域 2 つの最低サイズと通路用の 1 マス分が確保できれば分割ができ、縦横とも分割できるならば長い方を分割します。<br>\n分割する位置は領域の最低サイズさえ確保できればどこから分割しても構いません。</p>\n<h2>矩形領域からの部屋作成</h2>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> minRoomSize <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">createRoom</span><span class=\"token punctuation\">(</span>rect<span class=\"token operator\">:</span> Rectangle<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Rectangle <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 部屋のサイズを決定</span>\n  <span class=\"token keyword\">const</span> width <span class=\"token operator\">=</span> minRoomSize <span class=\"token operator\">+</span> <span class=\"token function\">rangeInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> minRoomSize <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> height <span class=\"token operator\">=</span> minRoomSize <span class=\"token operator\">+</span> <span class=\"token function\">rangeInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">height</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> minRoomSize <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 部屋の左上位置を決定</span>\n  <span class=\"token keyword\">const</span> startX <span class=\"token operator\">=</span> rect<span class=\"token punctuation\">.</span>left <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token function\">rangeInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> width <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> startY <span class=\"token operator\">=</span> rect<span class=\"token punctuation\">.</span>top <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token function\">rangeInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">height</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> height <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 部屋情報を返却</span>\n  <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>startX<span class=\"token punctuation\">,</span> startY<span class=\"token punctuation\">,</span> startX <span class=\"token operator\">+</span> width <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> startY <span class=\"token operator\">+</span> height <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>矩形領域の外側 1px を除いて、内部にランダムな大きさの部屋を作ります。<br>\nつまり縦横ともに 2px 引いた値が最大サイズになります。<br>\n部屋の最低サイズは前もって用意しておいた定数<code>minRoomSize</code>を参照します。</p>\n<h2>部屋を通路で繋ぐ</h2>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">makeCorridor</span><span class=\"token punctuation\">(</span>partitions<span class=\"token operator\">:</span> Rectangle<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> rooms<span class=\"token operator\">:</span> Rectangle<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\"><</span> partitions<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>partitions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> partitions<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> rooms<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> rooms<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\"><</span> partitions<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\"><</span> partitions<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n        partitions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>left <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">===</span> partitions<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>right <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">||</span>\n        partitions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>right <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">===</span> partitions<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>left <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">||</span>\n        partitions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>top <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">===</span> partitions<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>bottom <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">||</span>\n        partitions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>bottom <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">===</span> partitions<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>top <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n      <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\"><</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>partitions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> partitions<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> rooms<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> rooms<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>\n  part0<span class=\"token operator\">:</span> Rectangle<span class=\"token punctuation\">,</span>\n  part1<span class=\"token operator\">:</span> Rectangle<span class=\"token punctuation\">,</span>\n  room0<span class=\"token operator\">:</span> Rectangle<span class=\"token punctuation\">,</span>\n  room1<span class=\"token operator\">:</span> Rectangle\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> posA<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> posB<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 縦に分割している場合</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>part0<span class=\"token punctuation\">.</span>bottom <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">==</span> part1<span class=\"token punctuation\">.</span>top <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    posA <span class=\"token operator\">=</span> room0<span class=\"token punctuation\">.</span>left <span class=\"token operator\">+</span> <span class=\"token function\">rangeInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span>room0<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    posB <span class=\"token operator\">=</span> room1<span class=\"token punctuation\">.</span>left <span class=\"token operator\">+</span> <span class=\"token function\">rangeInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span>room1<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">fill</span><span class=\"token punctuation\">(</span>\n      r<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>posA<span class=\"token punctuation\">,</span> room0<span class=\"token punctuation\">.</span>bottom <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> posA<span class=\"token punctuation\">,</span> part0<span class=\"token punctuation\">.</span>bottom <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      CellType<span class=\"token punctuation\">.</span>corridor\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">fill</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>posB<span class=\"token punctuation\">,</span> room1<span class=\"token punctuation\">.</span>top <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> posB<span class=\"token punctuation\">,</span> part1<span class=\"token punctuation\">.</span>top <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> CellType<span class=\"token punctuation\">.</span>corridor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">fill</span><span class=\"token punctuation\">(</span>\n      r<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>posA<span class=\"token punctuation\">,</span> part0<span class=\"token punctuation\">.</span>bottom <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> posB<span class=\"token punctuation\">,</span> part1<span class=\"token punctuation\">.</span>top <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      CellType<span class=\"token punctuation\">.</span>corridor\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 横に分割している場合</span>\n  <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>part0<span class=\"token punctuation\">.</span>right <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">==</span> part1<span class=\"token punctuation\">.</span>left <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    posA <span class=\"token operator\">=</span> room0<span class=\"token punctuation\">.</span>top <span class=\"token operator\">+</span> <span class=\"token function\">rangeInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">height</span><span class=\"token punctuation\">(</span>room0<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    posB <span class=\"token operator\">=</span> room1<span class=\"token punctuation\">.</span>top <span class=\"token operator\">+</span> <span class=\"token function\">rangeInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">height</span><span class=\"token punctuation\">(</span>room1<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">fill</span><span class=\"token punctuation\">(</span>\n      r<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>room0<span class=\"token punctuation\">.</span>right <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> posA<span class=\"token punctuation\">,</span> part0<span class=\"token punctuation\">.</span>right <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> posA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      CellType<span class=\"token punctuation\">.</span>corridor\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">fill</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>room1<span class=\"token punctuation\">.</span>left <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> posB<span class=\"token punctuation\">,</span> part1<span class=\"token punctuation\">.</span>left <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> posB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> CellType<span class=\"token punctuation\">.</span>corridor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">fill</span><span class=\"token punctuation\">(</span>\n      r<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>part0<span class=\"token punctuation\">.</span>right <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> posA<span class=\"token punctuation\">,</span> part1<span class=\"token punctuation\">.</span>left <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> posB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      CellType<span class=\"token punctuation\">.</span>corridor\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>部屋と部屋を繋ぐ通路を作成します。</p>\n<p><code>splitRect()</code>で、縦に分割する際、</p>\n<ul>\n<li>上の領域を配列の左側</li>\n<li>下の領域を配列の右側</li>\n</ul>\n<p>横に分割する際、</p>\n<ul>\n<li>左の領域を配列の左側</li>\n<li>右の領域を配列の右側</li>\n</ul>\n<p>に入れています。</p>\n<p>これによって、</p>\n<ul>\n<li>配列要素の隣同士の領域は縦か横で接触している</li>\n</ul>\n<p>という事がわかります。</p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// 縦に分割している場合</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>part0<span class=\"token punctuation\">.</span>bottom <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">==</span> part1<span class=\"token punctuation\">.</span>top <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 横に分割している場合</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>part0<span class=\"token punctuation\">.</span>right <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">==</span> part1<span class=\"token punctuation\">.</span>left <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>縦か横、どちらに接触しているかは位置を見て判定することができます。</p>\n"}},"__N_SSG":true}